"use client";

import { useEffect, useState, useCallback } from "react"; // Import c√°c hook c·ªßa React
import { useRouter, useParams } from "next/navigation"; // Import hook Next.js ƒë·ªÉ x·ª≠ l√Ω routing
import { auth, db } from "@/lib/firebaseConfig"; // Import Firebase auth v√† db
import { collection, deleteDoc, doc, getDocs } from "firebase/firestore"; // C√°c h√†m Firebase Firestore
import Image from "next/image"; // Component Image c·ªßa Next.js

const CollectionDetail = () => {
  const router = useRouter(); // Kh·ªüi t·∫°o router ƒë·ªÉ ƒëi·ªÅu h∆∞·ªõng trang
  const params = useParams(); // L·∫•y c√°c params t·ª´ URL
  const id = params?.id as string; // √âp ki·ªÉu id th√†nh string

  const [images, setImages] = useState<{ id: string; url: string }[]>([]); // Tr·∫°ng th√°i l∆∞u ·∫£nh
  const [collectionName, setCollectionName] = useState(""); // Tr·∫°ng th√°i l∆∞u t√™n b·ªô s∆∞u t·∫≠p
  const [hoveredImage, setHoveredImage] = useState<string | null>(null); // Tr·∫°ng th√°i l∆∞u ·∫£nh ƒëang hover

  useEffect(() => {
    if (!id) { // Ki·ªÉm tra n·∫øu kh√¥ng c√≥ id
      console.error("‚ùå Kh√¥ng t√¨m th·∫•y ID b·ªô s∆∞u t·∫≠p");
      router.push("/profile"); // Quay l·∫°i trang profile n·∫øu kh√¥ng c√≥ ID
    }
  }, [id, router]); // Ch·∫°y khi id ho·∫∑c router thay ƒë·ªïi

  // H√†m l·∫•y ·∫£nh trong b·ªô s∆∞u t·∫≠p
  const fetchCollection = useCallback(async () => {
    if (!auth.currentUser || !id) return; // Ki·ªÉm tra ng∆∞·ªùi d√πng ƒëƒÉng nh·∫≠p v√† id h·ª£p l·ªá

    try {
      const userId = auth.currentUser.uid; // L·∫•y id ng∆∞·ªùi d√πng
      const imagesRef = collection(db, "users", userId, "collections", id, "images"); // L·∫•y ref ·∫£nh trong b·ªô s∆∞u t·∫≠p
      const querySnapshot = await getDocs(imagesRef); // L·∫•y d·ªØ li·ªáu ·∫£nh

      const fetchedImages = querySnapshot.docs.map((doc) => ({
        id: doc.id,
        url: doc.data().url, // Tr√≠ch xu·∫•t id v√† url c·ªßa m·ªói ·∫£nh
      }));
      setImages(fetchedImages); // C·∫≠p nh·∫≠t danh s√°ch ·∫£nh
      setCollectionName(`B·ªô s∆∞u t·∫≠p ${id}`); // C·∫≠p nh·∫≠t t√™n b·ªô s∆∞u t·∫≠p
    } catch (error) {
      console.error("‚ùå L·ªói khi l·∫•y ·∫£nh:", error); // X·ª≠ l√Ω l·ªói khi l·∫•y ·∫£nh
    }
  }, [id]); // Ch·∫°y l·∫°i khi id thay ƒë·ªïi

  // H√†m x√≥a ·∫£nh
  const deleteImage = async (imageId: string) => {
    if (!auth.currentUser || !id) return; // Ki·ªÉm tra ng∆∞·ªùi d√πng ƒëƒÉng nh·∫≠p v√† id h·ª£p l·ªá

    const confirmDelete = confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a ·∫£nh n√†y?"); // X√°c nh·∫≠n x√≥a ·∫£nh
    if (!confirmDelete) return; // N·∫øu kh√¥ng x√°c nh·∫≠n th√¨ kh√¥ng l√†m g√¨

    try {
      const userId = auth.currentUser.uid; // L·∫•y id ng∆∞·ªùi d√πng
      await deleteDoc(doc(db, "users", userId, "collections", id, "images", imageId)); // X√≥a ·∫£nh kh·ªèi Firestore
      setImages((prevImages) => prevImages.filter((image) => image.id !== imageId)); // C·∫≠p nh·∫≠t l·∫°i UI sau khi x√≥a ·∫£nh
    } catch (error) {
      console.error("‚ùå L·ªói khi x√≥a ·∫£nh:", error); // X·ª≠ l√Ω l·ªói khi x√≥a ·∫£nh
    }
  };

  // H√†m x√≥a b·ªô s∆∞u t·∫≠p
  const deleteCollection = async () => {
    if (!auth.currentUser || !id) return; // Ki·ªÉm tra ng∆∞·ªùi d√πng ƒëƒÉng nh·∫≠p v√† id h·ª£p l·ªá

    const confirmDelete = confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a b·ªô s∆∞u t·∫≠p n√†y?"); // X√°c nh·∫≠n x√≥a b·ªô s∆∞u t·∫≠p
    if (!confirmDelete) return; // N·∫øu kh√¥ng x√°c nh·∫≠n th√¨ kh√¥ng l√†m g√¨

    try {
      const userId = auth.currentUser.uid; // L·∫•y id ng∆∞·ªùi d√πng
      await deleteDoc(doc(db, "users", userId, "collections", id)); // X√≥a b·ªô s∆∞u t·∫≠p kh·ªèi Firestore
      alert("‚úÖ ƒê√£ x√≥a b·ªô s∆∞u t·∫≠p!"); // Th√¥ng b√°o x√≥a th√†nh c√¥ng
      router.push("/profile"); // ƒêi·ªÅu h∆∞·ªõng v·ªÅ trang profile
    } catch (error) {
      console.error("‚ùå L·ªói khi x√≥a b·ªô s∆∞u t·∫≠p:", error); // X·ª≠ l√Ω l·ªói khi x√≥a b·ªô s∆∞u t·∫≠p
    }
  };

  useEffect(() => {
    if (id) fetchCollection(); // G·ªçi h√†m fetchCollection n·∫øu c√≥ id
  }, [id, fetchCollection]); // Ch·∫°y l·∫°i khi id ho·∫∑c fetchCollection thay ƒë·ªïi

  return (
    <div className="flex flex-col items-center min-h-screen bg-gray-100 p-6">
      <div className="max-w-4xl w-full bg-white p-6 rounded-lg shadow-lg">
        {/* Ti√™u ƒë·ªÅ + N√∫t X√≥a */}
        <div className="flex justify-between items-center mb-4">
          <h1 className="text-2xl font-bold">{collectionName}</h1>
          <button
            onClick={deleteCollection} // G·ªçi h√†m x√≥a b·ªô s∆∞u t·∫≠p
            className="px-4 py-2 text-white bg-red-500 rounded-md hover:bg-red-600 transition"
          >
            üóë X√≥a b·ªô s∆∞u t·∫≠p
          </button>
        </div>

        {/* Hi·ªÉn th·ªã ·∫£nh trong b·ªô s∆∞u t·∫≠p */}
        <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
          {images.length > 0 ? (
            images.map((image) => (
              <div
                key={image.id}
                className="relative group overflow-hidden rounded-lg shadow-md"
                onMouseEnter={() => setHoveredImage(image.id)} // Set ·∫£nh ƒëang hover
                onMouseLeave={() => setHoveredImage(null)} // H·ªßy hover
              >
                <Image
                  src={image.url}
                  alt="·∫¢nh"
                  width={300}
                  height={200}
                  className="w-full h-40 object-cover transition-transform transform group-hover:scale-105" // Hi·ªáu ·ª©ng ph√≥ng to khi hover
                />

                {/* N√∫t x√≥a ch·ªâ hi·ªÉn th·ªã khi hover */}
                {hoveredImage === image.id && (
                  <button
                    onClick={() => deleteImage(image.id)} // G·ªçi h√†m x√≥a ·∫£nh
                    className="absolute top-2 right-2 bg-red-500 text-white px-2 py-1 rounded opacity-80 hover:opacity-100"
                  >
                    X√≥a
                  </button>
                )}
              </div>
            ))
          ) : (
            <p className="text-gray-500 text-center w-full">Ch∆∞a c√≥ ·∫£nh n√†o trong b·ªô s∆∞u t·∫≠p.</p> // Hi·ªÉn th·ªã n·∫øu kh√¥ng c√≥ ·∫£nh
          )}
        </div>
      </div>
    </div>
  );
};

export default CollectionDetail;
